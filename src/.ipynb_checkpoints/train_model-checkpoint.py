# -*- coding: utf-8 -*-
"""train_model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QpMxBtAbRM2t5D-69EGKHFGMmLB2suFO
"""

from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import LabelEncoder
import pandas as pd
import joblib

# Charger les données
data = pd.read_csv("loan_sanction_train.csv")
data

# Préparer les données (ajuste cela en fonction de ton dataset)
X = data.drop("Loan_Status", axis=1)  # Ajuster selon la colonne cible
y = data["Loan_Status"]

# Encoder les colonnes catégorielles
# Appliquer un encodage LabelEncoder sur les colonnes catégorielles
label_encoder = LabelEncoder()

# Parcourir toutes les colonnes et encoder celles qui sont de type 'object' (chaîne de caractères)
for column in X.columns:
    if X[column].dtype == 'object':
        X[column] = label_encoder.fit_transform(X[column])

# Encoder la colonne cible si nécessaire
y = label_encoder.fit_transform(y)

# Diviser les données en ensemble d'entraînement et de test
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Entraînement du modèle RandomForest
clf = RandomForestClassifier()
clf.fit(X_train, y_train)

# Prédictions
y_pred = clf.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))

# Sauvegarder le modèle
joblib.dump(clf, "Octroi_credit_classification_model.pkl")